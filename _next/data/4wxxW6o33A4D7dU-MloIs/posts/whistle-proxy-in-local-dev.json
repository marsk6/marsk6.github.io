{"pageProps":{"post":{"__typename":"Post","slug":"whistle-proxy-in-local-dev","title":"问题记录-本地开发用 whistle 做代理","tags":[{"__typename":"Tag","name":"问题记录"}],"category":null,"ctime":1615028100000,"date":"03-06","content":"\n## 背景\n\n在本地用 localhost 开发时，由于 `SameSite cookies` 的限制，请求跨域的后端 API 浏览器不会自动带上 cookie。\n\n一种解决办法是在本地用 whistle 做反向代理，开发时访问对外域名而绕过跨域的限制，下面记录遇到的问题。\n\n## 问题 1  net::ERR_SSL_PROTOCOL_ERROR\n\n```\nhttps://test.foo.com http://localhost:4900\n```\n\n配置 whistle rule，用 @vue/cli-service 启动项目后，访问  `https://test.foo.com`  出现下面的错误   `net::ERR_SSL_PROTOCOL_ERROR`\n![](https://cdn.jsdelivr.net/gh/marsk6/image-center@master/20230307110309.png)\n\n`https://localhost:4900/sockjs-node/info` 是热更新添加的链接，用来检测 WebSocket 服务可用性，由于我访问的 web 是 https，所以 WebSocket 也必须是 wss\n\n![](https://confluence.shopee.io/download/attachments/1659227106/image2023-3-6_16-33-2.png?version=1&modificationDate=1678091583000&api=v2)\n\n### 处理方法\n\n配置 webpack-dev-server，让 `https://localhost:4900/sockjs-node/info` 变成 `https://test.foo.com/sockjs-node/info`\n\n```js\ndevServer: {\n  ...,\n  public: 'test.foo.com'\n}\n```\n\n添加 whistle rule\n\n```\nwss://test.foo.com ws://localhost:4900\n```\n\n## 问题 2  Invalid Host/Origin header\n\nwss 请求会返回  `Invalid Host/Origin header`\n\n为了防止 DNS Rebinding 攻击，webpack-dev-server 会取请求头的 host/orign 和配置的 devServer.host 或 devServer.public 做比较，只允许配置相同的请求\n\n### 处理方法\n\n方法 1\n\n配置 webpack-dev-server 的  allowedHosts\n\n```js\ndevServer: {\n  allowedHosts:  'all',// webpack 4.0+\n}\n```\n\n方法 2\n\n配置 whistle rule，修改请求头的 host/origin\n\n```\n  wss://seller-cms.test.shopee.com ws://localhost:4900 reqHeaders://{wss-header}\n```\n\n**wss-header**\n\n```\n{\n  \"Host\": \"localhost:4900\",\n  \"Origin\": \"http://localhost:4900\"\n}\n```\n\n> 本博客所有文章除特别声明外，均采用 BY-NC-SA 许可协议。转载请注明出处！\n","prevArticle":{"__typename":"Post","title":"mac 安装 ruby 和 cocoapods","slug":"install-ruby-cocoapods-on-mac"},"nextArticle":{"__typename":"Post","title":"问题记录-记一次 react hooks 闭包陷阱","slug":"log-of-reack-hooks-trap"},"readingTime":"0","brief":"在本地开发用 whistle 做代理，记录配置 whistle rules 后遇到的请求问题","toc":"- [背景](#%E8%83%8C%E6%99%AF)\n- [问题 1 net::ERR_SSL_PROTOCOL_ERROR](#%E9%97%AE%E9%A2%98-1--neterr_ssl_protocol_error)\n  * [处理方法](#%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95)\n- [问题 2 Invalid Host/Origin header](#%E9%97%AE%E9%A2%98-2--invalid-hostorigin-header)\n  * [处理方法](#%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95-1)"},"relatedTags":[{"__typename":"Tag","name":"问题记录","posts":[{"__typename":"Post","slug":"whistle-proxy-in-local-dev"}]}]},"__N_SSG":true}